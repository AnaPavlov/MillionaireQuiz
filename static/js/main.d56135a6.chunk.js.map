{"version":3,"sources":["components/UI/Modal/ModalContent/AssistanceUI/AudienceModal/AudienceModal.module.css","components/UI/Modal/ModalContent/NewGame/NewGame.module.css","components/Answers/Answer/Answer.module.css","containers/GameGenerator/GameGenerator.module.css","components/Progress/Progress.module.css","components/UI/Modal/ModalContent/AssistanceUI/FriendModal/FriendModal.module.css","components/UI/SwitchGameButton/SwitchGameButton.module.css","components/Answers/Answers.module.css","components/Question/Question.module.css","components/UI/Modal/Modal.module.css","components/UI/Button/Button.module.css","components/UI/Backdrop/Backdrop.module.css","components/Assistance/Assistance.module.css","components/Assistance/Audience/Audience.module.css","components/Assistance/Elimination/Elimination.module.css","components/Assistance/FriendCall/FriendCall.module.css","components/Answers/Answer/Answer.js","components/Answers/Answers.js","components/Question/Question.js","components/Progress/Progress.js","components/UI/Button/Button.js","components/UI/Modal/ModalContent/NewGame/NewGame.js","components/UI/Modal/ModalContent/ExitGame/ExitGame.js","components/UI/Modal/ModalContent/AssistanceUI/AudienceModal/AudienceModal.js","components/UI/Modal/ModalContent/AssistanceUI/FriendModal/FriendModal.js","components/UI/Modal/ModalContent/ModalContent.js","components/UI/Modal/Modal.js","components/UI/Backdrop/Backdrop.js","components/Assistance/Audience/Audience.js","components/Assistance/Elimination/Elimination.js","components/Assistance/FriendCall/FriendCall.js","components/Assistance/Assistance.js","components/UI/SwitchGameButton/SwitchGameButton.js","containers/GameGenerator/GameGenerator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","answer","props","isDisabled","disabled","isGameActive","console","log","colorChange","correctAnswer","answerContent","styles","correct","wrong","hide","visibility","style","className","AnswerBox","id","type","onChange","click","onClick","disableAnswers","htmlFor","answerOrder","Answers","state","dissableAnswers","setState","this","setTimeout","answersOrder","answers","map","answ","index","Answer","answerClick","bind","key","isEliminationActive","indexArray","splice","correctIndex","randomIndex","Math","floor","random","Component","question","QuestionBox","progress","list","Object","entries","15","14","13","12","11","10","9","8","7","6","5","4","3","2","1","value","currentProgress","button","children","newGame","NewGame","Button","confirmGame","cancelHandler","exitGame","AudienceModal","randomPercentages","total","i","push","getRandomPercentages","swapIndexes","chartBars","height","Audience","Percentes","Chart","Labels","friendModal","FriendModal","span","modalContent","content","activeModal","ExitGame","modal","Modal","transform","show","opacity","ModalContent","backdrop","closeModal","Backdrop","audience","showAudience","elimination","Elimination","showElimination","friendCall","FriendCall","showFriendCall","assistance","Assistance","usedAssistance","switchGameButton","questionsSet","StartExit","StateContainer","QuestionsData","questionsSet0","isEliminationRequired","newGameModal","exitGameModal","startGame","toString","resetGame","answerHandler","alert","prevState","handleAudience","handleFriendCall","handleElimination","Container","SwitchGameButton","gameMain","Question","Progress","App","GameGenerator","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d56135a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Audience\":\"AudienceModal_Audience__1W3Kg\",\"Chart\":\"AudienceModal_Chart__10qxN\",\"Labels\":\"AudienceModal_Labels__1Hxqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewGame\":\"NewGame_NewGame__1Kn7N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerBox\":\"Answer_AnswerBox__11sUZ\",\"correct\":\"Answer_correct__1astd\",\"colorchangecorrect\":\"Answer_colorchangecorrect__2pt1B\",\"wrong\":\"Answer_wrong__1rWf9\",\"colorchangewrong\":\"Answer_colorchangewrong__RM1oP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"GameGenerator_Container__3f3D4\",\"gameMain\":\"GameGenerator_gameMain__2vw1m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentProgress\":\"Progress_currentProgress__1zdPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FriendModal\":\"FriendModal_FriendModal__EBbhy\",\"span\":\"FriendModal_span__gKCG4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StartExit\":\"SwitchGameButton_StartExit__2Q0Ri\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Answers\":\"Answers_Answers__3jk7C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuestionBox\":\"Question_QuestionBox__A2akr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2lgkF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Assistance\":\"Assistance_Assistance__2JmWM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Audience\":\"Audience_Audience__2rPVX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Elimination\":\"Elimination_Elimination__1uGym\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FriendCall\":\"FriendCall_FriendCall__1bGia\"};","import React from 'react';\nimport styles from './Answer.module.css';\n\nconst answer = props => {\n  const isDisabled = (props.disabled || !props.isGameActive) ? true : false\n  console.log(isDisabled);\n  \n  const colorChange =\n    props.correctAnswer === props.answerContent\n      ? `${styles.correct}`\n      : `${styles.wrong}`;\n  const hide = props.hide ? { visibility: 'hidden' } : null;\n  return (\n    <div style={hide} className={styles.AnswerBox}>\n      <input\n        id={props.answerContent}\n        type=\"checkbox\"\n        onChange={props.click}\n        disabled={isDisabled}\n        onClick={props.disableAnswers}\n      />\n      <label className={colorChange} htmlFor={props.answerContent}>\n        <span>{props.answerOrder}:</span>\n        <p>{props.answerContent}</p>\n      </label>\n    </div>\n  );\n};\n\nexport default answer;\n","import React, { Component } from 'react';\n\nimport styles from './Answers.module.css';\nimport Answer from './Answer/Answer';\n\nclass Answers extends Component {\n  state = {\n    disabled: false,\n  };\n\n  componentDidUpdate() {\n    //wait 2 sec to enable answers, because we have setTimeout function on checking the correctness of answer\n    if (this.state.disabled === false) {\n      return;\n    }\n\n    const enableAnswers = () => {\n      this.setState({\n        disabled: false\n      });\n    };\n    setTimeout(enableAnswers, 2000);\n  }\n\n  dissableAnswers = () => {\n    this.setState({\n      disabled: true\n    });\n  };\n\n  render(props) {\n    const answersOrder = ['A', 'B', 'C', 'D'];\n\n    let answer = this.props.answers.map((answ, index) => {\n      return (\n        <Answer\n          answerContent={answ}\n          answerOrder={answersOrder[index]}\n          isGameActive={this.props.isGameActive}\n          disabled={this.state.disabled}\n          dissableAnswers={this.dissableAnswers}\n          click={this.props.answerClick.bind(this, index)}\n          key={answ}\n          correctAnswer={this.props.correctAnswer}\n        />\n      );\n    });\n\n    //in case elimination assistance is required, hide two answers\n    if (this.props.isEliminationActive) {\n      const indexArray = [0, 1, 2, 3];\n      indexArray.splice(this.props.correctIndex, 1);\n      let randomIndex = indexArray[Math.floor(Math.random() * 3)];\n\n      answer = this.props.answers.map((answ, index) => {\n        let hide =\n          index === this.props.correctIndex || index === randomIndex\n            ? false\n            : true;\n        return (\n          <Answer\n            answerContent={answ}\n            answerOrder={answersOrder[index]}\n            disabled={this.state.disabled}\n            dissableAnswers={this.dissableAnswers}\n            click={this.props.answerClick.bind(this, index)}\n            hide={hide}\n            key={answ}\n            correctAnswer={this.props.correctAnswer}\n          />\n        );\n      });\n    }\n    return <div className={styles.Answers}>{answer}</div>;\n  }\n}\n\nexport default Answers;\n","import React from 'react';\n\nimport styles from './Question.module.css';\n\nconst question = props => {\n  return <div className={styles.QuestionBox}>{props.question}</div>;\n};\n\nexport default question;\n","import React from 'react';\n\nimport styles from './Progress.module.css';\n\nconst progress = props => {\n  const RATING = {\n    15: '$ 1 000 000',\n    14: '$ 500 000',\n    13: '$ 250 000',\n    12: '$ 125 000',\n    11: '$ 64 000',\n    10: '$ 32 000',\n    9: '$ 16 000',\n    8: '$ 8 000',\n    7: '$ 4 000',\n    6: '$ 2 000',\n    5: '$ 1 000',\n    4: '$ 500',\n    3: '$ 300',\n    2: '$ 200',\n    1: '$ 100'\n  };\n\n  const list = Object.entries(RATING).map(([key, value]) => {\n    const currentProgress =\n      props.progress === key - 1 ? 'currentProgress' : null;\n    return (\n      <li key={key} className={styles[currentProgress]}>\n        <span>{key}</span>\n        {value}\n      </li>\n    );\n  });\n  return <ul className={styles}>{list}</ul>;\n};\n\nexport default progress;\n","import React from 'react';\n\nimport styles from './Button.module.css';\n\nconst button = props => <button {...props} className={styles.button}>{props.children}</button>\n\nexport default button;\n","import React from 'react';\n\nimport styles from './NewGame.module.css';\nimport Button from '../../../Button/Button';\n\nconst newGame = props => {\n  return (\n    <div className={styles.NewGame}>\n      <h2>New Game?</h2>\n      <Button onClick={props.confirmGame}>Yes</Button>\n      <Button onClick={props.cancelHandler}>Cancel</Button>\n    </div>\n  );\n};\n\nexport default newGame;\n","import React from 'react';\n\nimport Button from '../../../Button/Button';\nimport styles from '../NewGame/NewGame.module.css';\n\nconst exitGame = props => {\n  return (\n    <div className={styles.NewGame}>\n      <h2>Are you sure you want to exit the game?</h2>\n      <Button onClick={props.exitGame}>Yes</Button>\n      <Button onClick={props.cancelHandler}>Cancel</Button>\n    </div>\n  );\n};\n\nexport default exitGame;\n","import React, { Component } from 'react';\n\nimport styles from './AudienceModal.module.css';\n\nclass AudienceModal extends Component {\n  render() {\n    const answersOrder = ['A', 'B', 'C', 'D'];\n    let randomPercentages = [];\n\n    function getRandomPercentages() {\n      let total = 100;\n      for (let i = 0; i < 4; i++) {\n        if (i === 0) {\n          randomPercentages.push(\n            Math.floor(Math.random() * (100 - 50 + 1)) + 50\n          );\n          total -= randomPercentages[i];\n        } else if (i === 3) {\n          randomPercentages.push(total);\n        } else {\n          randomPercentages.push(Math.floor(Math.random() * total));\n          total -= randomPercentages[i];\n        }\n      }\n    }\n\n    //swap places, so that in the place of the correct index is value of a highest percentage\n    const swapIndexes = () => {\n      getRandomPercentages();\n      [randomPercentages[0], randomPercentages[this.props.correctIndex]] = [\n        randomPercentages[this.props.correctIndex],\n        randomPercentages[0]\n      ];\n    };\n    swapIndexes();\n\n    const chartBars = answersOrder.map((answer, index) => {\n      return (\n        <div\n          key={answer}\n          style={{ height: randomPercentages[index] + '%' }}\n        ></div>\n      );\n    });\n\n    return (\n      <div className={styles.Audience}>\n        <h2>Hall assistance:</h2>\n        <div className={styles.Percentes}></div>\n        <div className={styles.Chart}>{chartBars}</div>\n        <div className={styles.Labels}>\n          <p>A</p>\n          <p>B</p>\n          <p>C</p>\n          <p>D</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AudienceModal;\n","import React from 'react';\n\nimport styles from './FriendModal.module.css';\n\nconst friendModal = props => {\n  const answerOrder = ['A', 'B', 'C', 'D'];\n  return (\n    <div className={styles.FriendModal}>\n      <span className={styles.span}>Your friend says:</span> I think that\n      correct answer is {answerOrder[props.correctIndex]}.\n    </div>\n  );\n};\n\nexport default friendModal;\n","import React from 'react';\n\nimport NewGame from './NewGame/NewGame';\nimport ExitGame from './ExitGame/ExitGame';\nimport AudienceModal from './AssistanceUI/AudienceModal/AudienceModal';\nimport FriendModal from './AssistanceUI/FriendModal/FriendModal';\n\nconst modalContent = props => {\n  let content;\n  switch (props.activeModal) {\n    case 'newGame':\n      content = (\n        <NewGame\n          confirmGame={props.confirmGame}\n          cancelHandler={props.cancelHandler}\n        />\n      );\n      break;\n    case 'exitGame':\n      content = (\n        <ExitGame\n          exitGame={props.exitGame}\n          cancelHandler={props.cancelHandler}\n        />\n      );\n      break;\n    case 'audience':\n      content = <AudienceModal correctIndex={props.correctIndex} />;\n      break;\n    case 'friendCall':\n      content = <FriendModal correctIndex={props.correctIndex} />;\n      break;\n\n    default:\n      content = null;\n      break;\n  }\n  return content;\n};\n\nexport default modalContent;\n","import React from 'react';\n\nimport styles from './Modal.module.css';\nimport ModalContent from './ModalContent/ModalContent';\n\nconst modal = props => {\n  return (\n    <div\n      className={styles.Modal}\n      style={{\n        transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n        opacity: props.show ? '' : '0'\n      }}\n    >\n      <ModalContent {...props} />\n    </div>\n  );\n};\n\nexport default modal;\n","import React from 'react';\n\nimport styles from './Backdrop.module.css';\n\nconst backdrop = props => {\n  return props.modalContent ? (\n    <div onClick={props.closeModal} className={styles.Backdrop}></div>\n  ) : null;\n};\n\nexport default backdrop;\n","import React from 'react';\n\nimport styles from './Audience.module.css';\n\nconst audience = props => {\n  return (\n    <button\n      onClick={props.showAudience}\n      className={styles.Audience}\n      disabled={props.disabled}\n    ></button>\n  );\n};\n\nexport default audience;\n","import React from 'react';\n\nimport styles from './Elimination.module.css';\n\nconst elimination = props => {\n  return (\n    <button\n      className={styles.Elimination}\n      onClick={props.showElimination}\n      disabled={props.disabled}\n    ></button>\n  );\n};\n\nexport default elimination;\n","import React from 'react';\n\nimport styles from './FriendCall.module.css';\n\nconst friendCall = props => {\n  return (\n    <button\n      className={styles.FriendCall}\n      onClick={props.showFriendCall}\n      disabled={props.disabled}\n    ></button>\n  );\n};\n\nexport default friendCall;\n","import React from 'react';\n\nimport styles from './Assistance.module.css';\nimport Audience from './Audience/Audience';\nimport Elimination from './Elimination/Elimination';\nimport FriendCall from './FriendCall/FriendCall';\n\nconst assistance = props => {\n  return (\n    <div className={styles.Assistance}>\n      <Audience\n        showAudience={props.showAudience}\n        disabled={props.usedAssistance.audience}\n      />\n      <FriendCall\n        showFriendCall={props.showFriendCall}\n        disabled={props.usedAssistance.friendCall}\n      />\n      <Elimination\n        showElimination={props.showElimination}\n        disabled={props.usedAssistance.elimination}\n      />\n    </div>\n  );\n};\n\nexport default assistance;\n","import React from 'react';\n\nimport styles from './SwitchGameButton.module.css';\nimport Button from '../Button/Button';\n\nconst switchGameButton = props => {\n  let button =\n    props.questionsSet[0].question === '' ? (\n      <Button className={styles.StartExit} onClick={props.newGame}>\n        New Game\n      </Button>\n    ) : (\n      <Button className={styles.StartExit} onClick={props.exitGame}>\n        Exit\n      </Button>\n    );\n  return button;\n};\n\nexport default switchGameButton;\n","import React, { Component } from 'react';\n\nimport styles from './GameGenerator.module.css';\nimport Answers from '../../components/Answers/Answers';\nimport Question from '../../components/Question/Question';\nimport Progress from '../../components/Progress/Progress';\nimport QuestionsData from '../../questions.json';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Backdrop from '../../components/UI/Backdrop/Backdrop';\nimport Assistance from '../../components/Assistance/Assistance';\nimport SwitchGameButton from '../../components/UI/SwitchGameButton/SwitchGameButton';\n\nclass StateContainer extends Component {\n  state = {\n    questionsSet: QuestionsData.questionsSet0,\n    progress: 0,\n    modalContent: null,\n    isEliminationRequired: false,\n    isGameActive: false,\n    usedAssistance: {\n      audience: false,\n      friendCall: false,\n      elimination: false\n    }\n  };\n\n  componentDidMount() {\n    this.newGameModal();\n  }\n\n  newGameModal = () => {\n    this.setState({\n      modalContent: 'newGame'\n    });\n  };\n\n  exitGameModal = () => {\n    this.setState({\n      modalContent: 'exitGame'\n    });\n  };\n\n  cancelHandler = () => {\n    this.setState({\n      modalContent: null\n    });\n  };\n\n  startGame = () => {\n    const randNum = Math.floor(Math.random() * 5) + 1,\n      questionsSet = 'questionsSet' + randNum.toString();\n    this.setState({\n      questionsSet: QuestionsData[questionsSet],\n      modalContent: null,\n      isGameActive: true\n    });\n  };\n\n  resetGame = () => {\n    this.setState({\n      questionsSet: QuestionsData.questionsSet0,\n      progress: 0,\n      modalContent: null,\n      isEliminationRequired: false,\n      isGameActive: false,\n      usedAssistance: {\n        audience: false,\n        friendCall: false,\n        elimination: false\n      }\n    });\n  };\n\n  answerHandler = index => {\n    if (!this.state.isGameActive) {\n      return;\n    }\n    const correctIndex = this.state.questionsSet[this.state.progress].correct;\n\n    const correctAnswer = () => {\n      this.setState(prevState => ({\n        progress: prevState.progress + 1,\n        isEliminationRequired: false\n      }));\n    };\n\n    const wrongAnswer = () => {\n      alert('You lost the game!');\n      this.resetGame();\n      this.setState({\n        modalContent: 'newGame'\n      });\n    };\n\n    if (index === correctIndex) {\n      //check if it's end of the game\n      if (this.state.progress === 14) {\n        alert('Bravvooo! You won a $1 000 000!');\n        return;\n      }\n      setTimeout(correctAnswer, 2000);\n    } else {\n      setTimeout(wrongAnswer, 2000);\n    }\n  };\n\n  handleAudience = () => {\n    if (!this.state.isGameActive) {\n      return;\n    }\n    const usedAssistance = { ...this.state.usedAssistance };\n    usedAssistance.audience = true;\n    this.setState({\n      modalContent: 'audience',\n      usedAssistance: usedAssistance\n    });\n  };\n\n  handleFriendCall = () => {\n    if (!this.state.isGameActive) {\n      return;\n    }\n    const usedAssistance = { ...this.state.usedAssistance };\n    usedAssistance.friendCall = true;\n    this.setState({\n      modalContent: 'friendCall',\n      usedAssistance: usedAssistance\n    });\n  };\n\n  handleElimination = () => {\n    if (!this.state.isGameActive) {\n      return;\n    }\n    const usedAssistance = { ...this.state.usedAssistance };\n    usedAssistance.elimination = true;\n    this.setState({\n      isEliminationRequired: true,\n      usedAssistance: usedAssistance\n    });\n  };\n\n  render() {\n    const question = this.state.questionsSet[this.state.progress].question,\n      answers = this.state.questionsSet[this.state.progress].content,\n      correctIndex = this.state.questionsSet[this.state.progress].correct,\n      correctAnswer = answers[correctIndex];\n\n    return (\n      <div className={styles.Container}>\n        <Backdrop\n          closeModal={this.cancelHandler}\n          modalContent={this.state.modalContent}\n        />\n        <Modal\n          show={this.state.modalContent}\n          confirmGame={this.startGame}\n          exitGame={this.resetGame}\n          activeModal={this.state.modalContent}\n          cancelHandler={this.cancelHandler}\n          correctIndex={this.state.questionsSet[this.state.progress].correct}\n        />\n        <main>\n          <SwitchGameButton\n            newGame={this.newGameModal}\n            exitGame={this.exitGameModal}\n            questionsSet={this.state.questionsSet}\n          />\n          <section className={styles.gameMain}>\n            <Question question={question} />\n            <Answers\n              answers={answers}\n              answerClick={index => this.answerHandler(index)}\n              isGameActive={this.state.isGameActive}\n              correctAnswer={correctAnswer}\n              correctIndex={\n                this.state.questionsSet[this.state.progress].correct\n              }\n              isEliminationActive={this.state.isEliminationRequired}\n            />\n          </section>\n        </main>\n        <aside>\n          <Assistance\n            showAudience={this.handleAudience}\n            showFriendCall={this.handleFriendCall}\n            showElimination={this.handleElimination}\n            usedAssistance={this.state.usedAssistance}\n          />\n          <Progress progress={this.state.progress} />\n        </aside>\n      </div>\n    );\n  }\n}\n\nexport default StateContainer;\n","import React from 'react';\n\nimport GameGenerator from './containers/GameGenerator/GameGenerator';\n\nfunction App() {\n  return (\n    <div>\n      <GameGenerator />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}